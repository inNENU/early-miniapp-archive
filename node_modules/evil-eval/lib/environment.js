"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const scope_1 = __importDefault(require("./scope"));
class Environment {
    constructor(node, scope, evaluateMap) {
        this.node = node;
        this.scope = scope;
        this.evaluateMap = evaluateMap;
    }
    evaluate(node, opts = {}) {
        const scope = opts.scope || this.scope;
        const env = new Environment(node, scope, this.evaluateMap);
        env.label = opts.label;
        env.extra = opts.extra;
        const evaluate = this.evaluateMap[node.type];
        if (!evaluate) {
            throw new Error(`evil-eval: Node type "${node.type}" is not implemented`);
        }
        return evaluate(env);
    }
    createBlockScope(invasive = false) {
        const scope = new scope_1.default('block', this.scope);
        scope.invasive = invasive;
        return scope;
    }
    createFunctionScope(invasive = false) {
        const scope = new scope_1.default('function', this.scope);
        scope.invasive = invasive;
        return scope;
    }
}
exports.default = Environment;
//# sourceMappingURL=environment.js.map