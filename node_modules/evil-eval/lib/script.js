"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const acorn = __importStar(require("acorn"));
const evaluate_1 = __importDefault(require("./evaluate"));
const environment_1 = __importDefault(require("./environment"));
const scope_1 = __importDefault(require("./scope"));
const sandbox_1 = __importDefault(require("./sandbox"));
const global_1 = __importDefault(require("./global"));
const value_1 = require("./value");
const ecmaVersionMap = {
    es5: 5,
    es2015: 6,
    es2016: 7,
    es2017: 8,
    es2018: 9,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9
};
class Script {
    constructor(code, options = {}) {
        this.options = Object.assign({ ecmaVersion: 5, sourceType: 'module' }, options);
        this.options.ecmaVersion = ecmaVersionMap[this.options.ecmaVersion];
        this.code = code;
        this.ast = acorn.parse(this.code, this.options);
        this.evaluateMap = evaluate_1.default[this.options.ecmaVersion];
    }
    runInContext(sandbox = {}) {
        const scope = this.createGlobalScope(sandbox);
        const env = new environment_1.default(null, scope, this.evaluateMap);
        if (this.options.sourceType === 'module') {
            const exports = {};
            const module = { exports };
            scope.declaration['exports'] = value_1.createSimpleValue(exports);
            scope.declaration['module'] = value_1.createSimpleValue(module);
            env.evaluate(this.ast);
            return module.exports;
        }
        else {
            return env.evaluate(this.ast);
        }
    }
    createGlobalScope(sandbox) {
        const scope = new scope_1.default('function');
        scope.sandbox = new sandbox_1.default(sandbox);
        const sandboxKeys = Object.keys(sandbox);
        const globalKeys = Object.keys(global_1.default);
        for (const key of globalKeys) {
            if (sandboxKeys.indexOf(key) < 0) {
                scope.declaration[key] = value_1.createSimpleValue(global_1.default[key]);
            }
        }
        return scope;
    }
}
exports.default = Script;
//# sourceMappingURL=script.js.map