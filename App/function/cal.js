"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var wxpage_1 = require("wxpage");
var component_1 = require("../utils/component");
var page_1 = require("../utils/page");
wxpage_1.default('cal', {
    data: {
        page: [
            { tag: 'head', title: '绩点计算(beta)', leftText: '功能大厅' },
            { tag: 'title', text: '绩点计算器' }
        ],
        grade: [],
        totalCredit: null,
        gradePointAverage: null,
        editText: '编辑',
        display: false
    },
    onLoad: function (option) {
        page_1.default.Set({ option: option, ctx: this });
        var _a = page_1.default.color(false), nc = _a.nc, bc = _a.bc;
        wx.setNavigationBarColor(nc);
        wx.setBackgroundColor(bc);
    },
    addNew: function () {
        var length = this.data.grade.length;
        var gradeNew = this.data.grade.concat({
            id: length,
            course: null,
            courseFocus: false,
            grade: null,
            gradeFocus: false,
            credit: null,
            creditFocus: false
        });
        this.setData({ grade: gradeNew });
    },
    input: function (e) {
        console.log(e);
        var grade = this.data.grade;
        var id = e.currentTarget.dataset.id;
        var target = e.currentTarget.dataset.class;
        grade[id][target + "Focus"] = true;
        console.log(e.detail.value.length);
        if (Number(e.detail.value))
            grade[id][target] = Number(e.detail.value);
        else
            grade[id][target] = e.detail.value;
        console.log(grade);
        this.setData({ grade: grade });
    },
    next: function (e) {
        var grade = this.data.grade;
        var id = e.currentTarget.dataset.id;
        grade[id].gradeFocus = true;
        this.setData({ grade: grade });
    },
    edit: function () {
        var editText = this.data.display ? '编辑' : '完成';
        this.setData({
            display: !this.data.display,
            editText: editText
        });
    },
    sort: function (e) {
        console.log(e);
    },
    remove: function (e) {
        console.log(e);
        var currentID = e.target.id[e.target.id.length - 1];
        var grade = this.data.grade;
        console.log("currentID\u662F" + currentID + ";grade\u662F" + grade);
        grade.splice(currentID, 1);
        console.log("\u65B0grade\u662F" + grade);
        for (var i = 0; i < grade.length; i++)
            grade[i].id = i;
        this.setData({ grade: grade });
    },
    calculate: function () {
        var _this = this;
        var courseNumber = this.data.grade.length;
        console.log("\u8BFE\u7A0B\u6570\u662F" + courseNumber);
        var totalCredit = 0;
        var totalGradeCal = 0;
        var flunkingCredit = 0;
        var flunkingGradeCal = 0;
        for (var i = 0; i < courseNumber; i++) {
            var grade = this.data.grade[i].grade;
            var credit = this.data.grade[i].credit;
            if (grade !== 0 && grade && credit && credit !== 0)
                if (grade < 60) {
                    flunkingCredit = credit + flunkingCredit;
                    if (grade > 50)
                        flunkingGradeCal = (grade - 50) / 10 * credit + flunkingGradeCal;
                }
                else {
                    totalCredit = credit + totalCredit;
                    totalGradeCal = (grade - 50) / 10 * credit + totalGradeCal;
                }
        }
        console.log("\u603B\u5B66\u5206\u662F" + totalCredit);
        console.log("\u603B\u8BA1\u7B97\u662F" + totalGradeCal);
        console.log("\u6302\u79D1\u5B66\u5206\u662F" + flunkingCredit);
        console.log("\u603B\u6302\u79D1\u8BA1\u7B97\u662F" + flunkingGradeCal);
        if (Number(flunkingCredit) === 0) {
            console.log('都及格了');
            this.setData({
                totalCredit: totalCredit,
                gradePointAverage: totalGradeCal / totalCredit
            });
            console.log(totalCredit);
            console.log(totalGradeCal / totalCredit);
        }
        else
            wx.showModal({
                title: '请选择计算方式',
                content: '平均绩点是否包含未达到60的成绩？\n★为建议项',
                cancelText: '包含',
                cancelColor: '#ff0000',
                confirmText: '排除★',
                success: function (res) {
                    if (res.cancel) {
                        totalCredit += flunkingCredit;
                        totalGradeCal += flunkingGradeCal;
                        console.log('不及格学分成绩被计入');
                        console.log("\u65B0\u603B\u5B66\u5206\u662F" + totalCredit);
                        console.log("\u65B0\u603B\u8BA1\u7B97\u662F" + totalGradeCal);
                    }
                    else if (res.confirm)
                        console.log('都及格了');
                    _this.setData({ totalCredit: totalCredit, gradePointAverage: totalGradeCal / totalCredit });
                }
            });
    },
    onPageScroll: function (e) {
        component_1.default.nav(e, this);
    },
    cA: function (e) {
        component_1.default.trigger(e, this);
    }
});
//# sourceMappingURL=data:application/json;base64,