"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var file_1 = require("./file");
var setpage_1 = require("./setpage");
var wx_1 = require("./wx");
var logger = wx.getLogManager({ level: 1 });
var resDownload = function (name) {
    wx.showLoading({ title: '更新中...', mask: true });
    wx.setStorageSync(name + "Download", false);
    var downLoadTask = wx.downloadFile({
        url: "https://mp.nenuyouth.com/" + name + ".zip",
        success: function (res) {
            console.log(name + " statusCode is " + res.statusCode);
            if (res.statusCode === 200) {
                wx.showLoading({ title: '保存中...', mask: true });
                file_1.default.saveFile(res.tempFilePath, name + "Zip");
                console.log("save " + name + " success");
                wx.showLoading({ title: '解压中...', mask: true });
                file_1.default.unzip(name + "Zip", '', function () {
                    console.log("unzip " + name + " sucess");
                    file_1.default.Delete(name + "Zip", false);
                    wx.setStorageSync(name + "Download", true);
                    console.log("delete " + name + " sucess");
                    wx.hideLoading();
                });
            }
        },
        fail: function (failMsg) { return console.error("download " + name + " fail:", failMsg); }
    });
    downLoadTask.onProgressUpdate(function (res) {
        wx.showLoading({ title: "\u4E0B\u8F7D\u4E2D..." + res.progress + "%", mask: true });
    });
};
var checkResUpdate = function (name, dataUsage) {
    var notify = wx.getStorageSync(name + "ResNotify");
    var localVersion = file_1.default.readJson(name + "Version");
    var localTime = wx.getStorageSync(name + "UpdateTime");
    var currentTime = Math.round(new Date().getTime() / 1000);
    console.log(name + "\u901A\u77E5\u72B6\u6001\u4E3A" + notify, '本地版本文件为：', localVersion);
    console.log(name + "\u66F4\u65B0\u4E8E" + localTime + ", \u73B0\u5728\u65F6\u95F4\u662F" + currentTime);
    if (notify || currentTime > localTime + 1000000)
        wx_1.default.request(name + "Version", function (data) {
            if (Number(localVersion) === Number(data))
                console.info(name + "Version match");
            else {
                console.info(name + "not match");
                if (notify)
                    wx.showModal({
                        title: '发现资源更新', content: "\u662F\u5426\u7ACB\u5373\u66F4\u65B0\u8D44\u6E90\uFF1F\n(\u4F1A\u6D88\u8017" + dataUsage + "\u6D41\u91CF)",
                        cancelText: '否', cancelColor: '#ff0000', confirmText: '是',
                        success: function (choice) {
                            if (choice.confirm)
                                resDownload(name);
                            else if (choice.cancel)
                                wx.showModal({
                                    title: '开启资源更新提示？', content: '在资源有更新时会提示您更新资源文件。',
                                    cancelText: '残忍关闭', cancelColor: '#ff0000', confirmText: '保持开启',
                                    success: function (choice2) {
                                        if (choice2.cancel)
                                            wx.showModal({
                                                title: '更新提示已关闭', showCancel: false,
                                                content: '您可以在设置中重新打开提示。请注意：小程序会每半个月对界面文件进行强制更新。',
                                                success: function () {
                                                    wx.setStorageSync(name + "ResNotify", false);
                                                }
                                            });
                                    }
                                });
                        }
                    });
                else
                    resDownload(name);
            }
        });
};
var tabBarChanger = function (nightmode) {
    var color = nightmode ? ['#000000', 'white'] : ['#ffffff', 'black'];
    wx.setTabBarStyle({ backgroundColor: color[0], borderStyle: color[1] });
};
var refreshPage = function (name, ctx, globalData) {
    var test = wx.getStorageSync('test');
    if (test)
        wx_1.default.request("config/" + name + "Test", function (data) {
            wx.setStorageSync(name, data);
            setpage_1.default.Set({ option: { aim: name }, ctx: ctx }, data);
        });
    else
        wx_1.default.request("config/" + globalData.version + "/" + name, function (data) {
            setpage_1.default.Set({ option: { aim: name }, ctx: ctx }, data);
        });
};
var initMarker = function (markers) {
    markers.forEach(function (marker) {
        var markerOrigin = {
            iconPath: '/function/icon/marker.png', width: 25, height: 25, alpha: 0.8,
            label: {
                content: marker.name, color: '#1A9D5E', fontSize: '10', anchorX: -4 - 5 * marker.name.length, anchorY: 0,
                bgColor: '#ffffff', borderWidth: 1, borderColor: '#efeef4', borderRadius: 2, padding: '3'
            },
            callout: {
                content: marker.detail, color: '#ffffff', fontSize: '16',
                borderRadius: '10', bgColor: '#1A9D5E', padding: '10', display: 'BYCLICK'
            }
        };
        if (!('title' in marker))
            marker.title = marker.detail;
        delete marker.name;
        delete marker.detail;
        Object.assign(marker, markerOrigin);
    });
    return markers;
};
var setMarker = function (data, name) {
    var marker = initMarker(data.points);
    var category = data.category;
    wx.setStorageSync(name + "-all", marker);
    Object.keys(category).forEach(function (i) {
        var markerDetail = [];
        for (var j = category[i][0]; j <= category[i][1]; j++)
            markerDetail.push(marker[j]);
        wx.setStorageSync(name + "-" + i, markerDetail);
    });
    return true;
};
var markerSet = function () {
    var markerVersion = wx.getStorageSync('markerVersion');
    var functionVersion = file_1.default.readJson('functionVersion');
    if (markerVersion === functionVersion)
        console.log('Marker 已设置就绪');
    else {
        var markerData = file_1.default.readJson('function/marker');
        if (markerData)
            if (setMarker(markerData[0], 'benbu') && setMarker(markerData[1], 'jingyue'))
                wx.setStorageSync('markerVersion', markerVersion);
            else {
                console.warn('Marker set failure.');
                wx.reportMonitor('25', 1);
            }
        else {
            console.log('get Marker error');
            logger.warn('get Marker error');
            wx_1.default.request('function/marker', function (data) {
                file_1.default.writeJson('function', 'marker', data);
                if (setMarker(data, 'benbu') && setMarker(data, 'jingyue') && markerVersion)
                    wx.setStorageSync('markerVersion', markerVersion);
                else {
                    console.warn('Marker set failure.');
                    wx.reportMonitor('25', 1);
                }
            });
        }
    }
};
exports.default = { update: checkResUpdate, tabBarChanger: tabBarChanger, refresh: refreshPage, markerSet: markerSet, resDownload: resDownload };
//# sourceMappingURL=data:application/json;base64,