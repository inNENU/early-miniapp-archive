"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fileManager = wx.getFileSystemManager();
var userPath = wx.env.USER_DATA_PATH;
var logger = wx.getLogManager({ level: 1 });
var Delete = function (path, isDir) {
    if (isDir === void 0) { isDir = false; }
    if (isDir === null)
        try {
            if (fileManager.statSync(userPath + "/" + path).isFile())
                fileManager.unlinkSync(userPath + "/" + path);
            else
                fileManager.rmdirSync(userPath + "/" + path, true);
        }
        catch (err) {
            console.error("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
            logger.warn("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
        }
    else if (isDir)
        try {
            fileManager.rmdirSync(userPath + "/" + path, true);
        }
        catch (err) {
            console.error("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
            logger.warn("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
        }
    else
        try {
            fileManager.unlinkSync(userPath + "/" + path);
        }
        catch (err) {
            console.error("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
            logger.warn("\u5220\u9664" + path + "\u51FA\u9519,\u9519\u8BEF\u4E3A:", err);
        }
};
var listFile = function (path) {
    try {
        var fileList = fileManager.readdirSync(userPath + "/" + path);
        console.info(path + "\u6587\u4EF6\u5939\u4E0B\u6587\u4EF6\u4E3A\uFF1A", fileList);
        return fileList;
    }
    catch (err) {
        console.error("\u5217\u51FA" + path + "\u6587\u4EF6\u5939\u4E0B\u6587\u4EF6\u9519\u8BEF\uFF1A", err);
        logger.warn("\u5217\u51FA" + path + "\u6587\u4EF6\u5939\u4E0B\u6587\u4EF6\u9519\u8BEF\uFF1A", err);
        return [];
    }
};
var readFile = function (path, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    try {
        return fileManager.readFileSync(userPath + "/" + path, encoding);
    }
    catch (err) {
        console.warn(path + "\u4E0D\u5B58\u5728");
        logger.debug(path + "\u4E0D\u5B58\u5728");
        return null;
    }
};
var readJson = function (path, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var fileContent;
    var data;
    try {
        fileContent = fileManager.readFileSync(userPath + "/" + path + ".json", encoding);
        try {
            data = JSON.parse(fileContent);
            console.log("read " + path + ".json\u6210\u529F\uFF1A", data);
        }
        catch (err) {
            data = null;
            console.warn(path + "\u89E3\u6790\u5931\u8D25");
            logger.debug(path + "\u89E3\u6790\u5931\u8D25");
        }
    }
    catch (err) {
        data = null;
        console.warn(path + "\u4E0D\u5B58\u5728");
        logger.debug(path + "\u4E0D\u5B58\u5728");
    }
    return data;
};
var makeDir = function (path, recursive) {
    if (recursive === void 0) { recursive = true; }
    try {
        fileManager.mkdirSync(userPath + "/" + path, recursive);
    }
    catch (err) {
        console.info(path + "\u76EE\u5F55\u5DF2\u5B58\u5728", err);
        logger.debug(path + "\u76EE\u5F55\u5DF2\u5B58\u5728", err);
    }
};
var saveFile = function (tempFilePath, path) {
    try {
        fileManager.saveFileSync(tempFilePath, userPath + "/" + path);
    }
    catch (err) {
        console.error("\u4FDD\u5B58\u6587\u4EF6\u5230" + path + "\u5931\u8D25\uFF1A", err);
        logger.warn("\u4FDD\u5B58\u6587\u4EF6\u5230" + path + "\u5931\u8D25\uFF1A", err);
    }
};
var saveOnlineFile = function (_a, successFunc, failFunc, errorFunc) {
    var onlinePath = _a[0], savePath = _a[1], fileName = _a[2];
    makeDir(savePath);
    wx.downloadFile({
        url: "https://mp.nenuyouth.com/" + onlinePath,
        filePath: userPath + "/" + savePath + "/" + fileName,
        success: function (res) {
            if (res.statusCode === 200) {
                console.info("save " + onlinePath + " success");
                successFunc(res.tempFilePath);
            }
            else {
                if (errorFunc)
                    errorFunc(res.statusCode);
                console.warn("\u4E0B\u8F7D" + onlinePath + "\u5931\u8D25\uFF0C\u72B6\u6001\u7801\u4E3A" + res.statusCode);
                logger.warn("\u4E0B\u8F7D" + onlinePath + "\u5931\u8D25\uFF0C\u72B6\u6001\u7801\u4E3A" + res.statusCode);
            }
        },
        fail: function (failMsg) {
            if (failFunc)
                failFunc(failMsg);
            console.warn("\u4E0B\u8F7D" + onlinePath + "\u5931\u8D25\uFF0C\u9519\u8BEF\u4E3A", failMsg);
            logger.warn("\u4E0B\u8F7D" + onlinePath + "\u5931\u8D25\uFF0C\u9519\u8BEF\u4E3A", failMsg);
        }
    });
};
var writeFile = function (path, fileName, data, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var jsonString = JSON.stringify(data);
    makeDir(path);
    fileManager.writeFileSync(userPath + "/" + path + "/" + fileName, jsonString, encoding);
};
var writeJson = function (path, fileName, data, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var jsonString = JSON.stringify(data);
    makeDir(path);
    fileManager.writeFileSync(userPath + "/" + path + "/" + fileName + ".json", jsonString, encoding);
};
var getJson = function (path, callback, failFunc) {
    var data = readJson(path);
    if (data)
        return callback(data);
    var temp = path.split('/');
    var fileName = temp.pop();
    var folder = temp.join('/');
    makeDir(folder);
    wx.downloadFile({
        url: "https://mp.nenuyouth.com/" + path + ".json",
        filePath: userPath + "/" + folder + "/" + fileName,
        success: function (res) {
            if (res.statusCode === 200) {
                console.info("Save " + path + ".json success");
                data = readJson(path);
                return callback(data);
            }
            console.warn("\u83B7\u53D6" + path + ".json\u5931\u8D25\uFF0C\u72B6\u6001\u7801\u4E3A" + res.statusCode);
            logger.warn("\u83B7\u53D6" + path + ".json\u5931\u8D25\uFF0C\u72B6\u6001\u7801\u4E3A" + res.statusCode);
            if (failFunc)
                return failFunc();
            return null;
        },
        fail: function (failMsg) {
            console.warn("\u4E0B\u8F7D" + path + ".json\u5931\u8D25\uFF0C\u9519\u8BEF\u4E3A", failMsg);
            logger.warn("\u4E0B\u8F7D" + path + ".json\u5931\u8D25\uFF0C\u9519\u8BEF\u4E3A", failMsg);
            if (failFunc)
                return failFunc();
            return null;
        }
    });
    return null;
};
var unzip = function (path, unzipPath, callback) {
    var args = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        args[_i - 3] = arguments[_i];
    }
    fileManager.unzip({
        zipFilePath: userPath + "/" + path, targetPath: userPath + "/" + unzipPath,
        success: function () {
            if (callback)
                return callback.apply(void 0, args);
            return null;
        },
        fail: function (failMsg) {
            console.error("unzip " + path + " fail:", failMsg);
            logger.warn("unzip " + path + " fail:", failMsg);
        }
    });
};
exports.default = {
    Delete: Delete, getJson: getJson, Manager: fileManager, listFile: listFile, readFile: readFile, readJson: readJson,
    makeDir: makeDir, saveFile: saveFile, saveOnlineFile: saveOnlineFile, writeFile: writeFile, writeJson: writeJson, unzip: unzip
};
//# sourceMappingURL=data:application/json;base64,