"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var logger = wx.getLogManager({ level: 1 });
var tip = function (text, duration, icon) {
    wx.showToast({ title: text, icon: icon, duration: duration ? duration : 1500 });
};
var netWorkReport = function () {
    wx.getNetworkType({
        success: function (res) {
            var networkType = res.networkType;
            if (networkType === '2g' || networkType === '3g')
                tip('您的网络状态不佳');
            else if (networkType === 'none' || networkType === 'unknown')
                tip('您的网络状态不佳');
            else if (networkType === 'wifi')
                wx.getConnectedWifi({
                    success: function (info) {
                        if (info.wifi.signalStrength < 0.5)
                            tip('Wifi信号不佳，网络链接失败');
                    },
                    fail: function () {
                        tip('无法连接网络');
                    }
                });
            else
                tip('网络连接出现问题，请稍后重试');
            logger.warn('Request fail with', networkType);
        },
        fail: function () {
            tip('网络连接出现问题，请稍后重试');
            logger.warn('Request fail and cannot get networkType');
        }
    });
};
var request = function (path, callback, failFunc, errorFunc) {
    wx.request({
        url: "https://mp.nenuyouth.com/" + path + ".json",
        success: function (res) {
            console.log('Request success:', res);
            if (res.statusCode === 200)
                return callback(res.data);
            tip('服务器出现问题，请稍后重试');
            console.warn("Request " + path + " fail: " + res.statusCode);
            logger.warn("Request " + path + " fail: " + res.statusCode);
            wx.reportMonitor('3', 1);
            if (errorFunc)
                errorFunc(res.statusCode);
            return null;
        },
        fail: function (failMsg) {
            if (failFunc)
                failFunc(failMsg);
            netWorkReport();
            console.warn("Request " + path + " fail:", failMsg);
            logger.warn("Request " + path + " fail:", failMsg);
            wx.reportMonitor('4', 1);
        }
    });
};
var downLoad = function (path, callback, failFunc, errorFunc) {
    var progress = wx.downloadFile({
        url: "https://mp.nenuyouth.com/" + path,
        success: function (res) {
            if (res.statusCode === 200)
                return callback(res.tempFilePath);
            tip('服务器出现问题，请稍后重试');
            if (errorFunc)
                errorFunc(res.statusCode);
            console.warn("DownLoad " + path + " fail: " + res.statusCode);
            logger.warn("DownLoad " + path + " fail: " + res.statusCode);
            return null;
        },
        fail: function (failMsg) {
            if (failFunc)
                failFunc(failMsg);
            netWorkReport();
            console.warn("DownLoad " + path + " fail:", failMsg);
            logger.warn("DownLoad " + path + " fail:", failMsg);
        }
    });
    progress.onProgressUpdate(function (res) {
        wx.showLoading({ title: "\u4E0B\u8F7D\u4E2D" + Math.round(res.progress) + "%" });
    });
};
exports.default = { downLoad: downLoad, netReport: netWorkReport, request: request, tip: tip };
//# sourceMappingURL=data:application/json;base64,