"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _a = getApp(), a = _a.globalData, _b = _a.lib, $component = _b.$component, $file = _b.$file, $page = _b.$page, $register = _b.$register;
$register('situs', {
    data: {},
    onPreload: function (res) {
        $page.resolve(res, $file.readJson("function/" + res.query.xiaoqu + "/" + res.query.aim));
    },
    onLoad: function (option) {
        var _this = this;
        if (a.page.aim === option.aim)
            $page.Set({ option: option, ctx: this });
        else {
            var pageData = $file.readJson("function/" + option.xiaoqu + "/" + option.aim);
            if (pageData)
                $page.Set({ option: option, ctx: this }, pageData);
            else
                $wx.request("function/" + option.xiaoqu + "/" + option.aim, function (data) {
                    $page.Set({ option: option, ctx: _this }, data);
                    if (!option.share) {
                        $file.makeDir("function/" + option.xiaoqu);
                        $file.writeJson("function/" + option.xiaoqu, option.aim, data);
                    }
                }, function () {
                    $page.Set({ option: option, ctx: _this }, [{ tag: 'error', statusBarHeight: a.info.statusBarHeight }]);
                }, function () {
                    $page.Set({ option: option, ctx: _this }, [{ tag: 'error', statusBarHeight: a.info.statusBarHeight }]);
                });
        }
    },
    onShow: function () {
        var _a = $page.color(this.data.page[0].grey), nc = _a[0], bc = _a[1];
        wx.setNavigationBarColor(nc);
        wx.setBackgroundColor(bc);
    },
    onPageScroll: function (e) {
        $component.nav(e, this);
    },
    cA: function (e) {
        $component.trigger(e, this);
    },
    onShareAppMessage: function () {
        return {
            title: this.data.page[0].title,
            path: "/function/situs?From=\u4E3B\u9875&depth=1&share=true&xiaoqu=" + this.xiaoqu + "&id=" + this.id + "&aim=" + this.aim
        };
    },
    redirect: function () {
        this.$switch('/page/main');
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l0dXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzaXR1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVFNLElBQUEsYUFBMEUsRUFBeEUsaUJBQWEsRUFBRSxXQUE0QyxFQUFyQywwQkFBVSxFQUFFLGdCQUFLLEVBQUUsZ0JBQUssRUFBRSx3QkFBd0IsQ0FBQztBQUVqRixTQUFTLENBQUMsT0FBTyxFQUFFO0lBQ2pCLElBQUksRUFBRSxFQUFFO0lBQ1IsU0FBUyxFQUFULFVBQVUsR0FBbUI7UUFDM0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxjQUFZLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxTQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBSyxDQUFDLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBQ0QsTUFBTSxFQUFOLFVBQU8sTUFBVztRQUFsQixpQkFxQkM7UUFwQkMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxNQUFNLENBQUMsR0FBRztZQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLFFBQUEsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQzthQUMzRDtZQUNILElBQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsY0FBWSxNQUFNLENBQUMsTUFBTSxTQUFJLE1BQU0sQ0FBQyxHQUFLLENBQUMsQ0FBQztZQUUzRSxJQUFJLFFBQVE7Z0JBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQzs7Z0JBRXZELEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBWSxNQUFNLENBQUMsTUFBTSxTQUFJLE1BQU0sQ0FBQyxHQUFLLEVBQUUsVUFBQyxJQUFZO29CQUNsRSxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxRQUFBLEVBQUUsR0FBRyxFQUFFLEtBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUd2QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRTt3QkFDakIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxjQUFZLE1BQU0sQ0FBQyxNQUFRLENBQUMsQ0FBQzt3QkFDM0MsS0FBSyxDQUFDLFNBQVMsQ0FBQyxjQUFZLE1BQU0sQ0FBQyxNQUFRLEVBQUUsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztxQkFDaEU7Z0JBQ0gsQ0FBQyxFQUFFO29CQUNELEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLFFBQUEsRUFBRSxHQUFHLEVBQUUsS0FBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNoRyxDQUFDLEVBQUU7b0JBQ0QsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLEdBQUcsRUFBRSxLQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hHLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDSCxDQUFDO0lBQ0QsTUFBTTtRQUVFLElBQUEsd0NBQThDLEVBQTdDLFVBQUUsRUFBRSxVQUF5QyxDQUFDO1FBRXJELEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3QixFQUFFLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQWlCRCxZQUFZLEVBQVosVUFBYSxDQUFNO1FBQ2pCLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFDRCxFQUFFLEVBQUYsVUFBRyxDQUFNO1FBQ1AsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNELGlCQUFpQjtRQUNmLE9BQU87WUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztZQUM5QixJQUFJLEVBQUUsaUVBQXFELElBQUksQ0FBQyxNQUFNLFlBQU8sSUFBSSxDQUFDLEVBQUUsYUFBUSxJQUFJLENBQUMsR0FBSztTQUN2RyxDQUFDO0lBQ0osQ0FBQztJQUdELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzdCLENBQUM7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQEF1dGhvcjogTXIuSG9wZVxuICogQERhdGU6IDIwMTktMDYtMjQgMjE6MzA6MjlcbiAqIEBMYXN0RWRpdG9yczogTXIuSG9wZVxuICogQExhc3RFZGl0VGltZTogMjAxOS0wNi0yNCAyMTozMTozOFxuICogQERlc2NyaXB0aW9uOiDlnLDngrnor6bmg4VcbiAqL1xuaW1wb3J0IHsgV1hQYWdlIH0gZnJvbSAnd3hwYWdlJztcbmNvbnN0IHsgZ2xvYmFsRGF0YTogYSwgbGliOiB7ICRjb21wb25lbnQsICRmaWxlLCAkcGFnZSwgJHJlZ2lzdGVyIH0gfSA9IGdldEFwcCgpO1xuXG4kcmVnaXN0ZXIoJ3NpdHVzJywge1xuICBkYXRhOiB7fSxcbiAgb25QcmVsb2FkKHJlczogV1hQYWdlLlBhZ2VBcmcpIHtcbiAgICAkcGFnZS5yZXNvbHZlKHJlcywgJGZpbGUucmVhZEpzb24oYGZ1bmN0aW9uLyR7cmVzLnF1ZXJ5LnhpYW9xdX0vJHtyZXMucXVlcnkuYWltfWApKTtcbiAgfSxcbiAgb25Mb2FkKG9wdGlvbjogYW55KSB7XG4gICAgaWYgKGEucGFnZS5haW0gPT09IG9wdGlvbi5haW0pICRwYWdlLlNldCh7IG9wdGlvbiwgY3R4OiB0aGlzIH0pO1xuICAgIGVsc2Uge1xuICAgICAgY29uc3QgcGFnZURhdGEgPSAkZmlsZS5yZWFkSnNvbihgZnVuY3Rpb24vJHtvcHRpb24ueGlhb3F1fS8ke29wdGlvbi5haW19YCk7XG5cbiAgICAgIGlmIChwYWdlRGF0YSkgJHBhZ2UuU2V0KHsgb3B0aW9uLCBjdHg6IHRoaXMgfSwgcGFnZURhdGEpO1xuICAgICAgZWxzZSAvLyDlkJHmnI3liqHlmajor7fmsYJqc29uXG4gICAgICAgICR3eC5yZXF1ZXN0KGBmdW5jdGlvbi8ke29wdGlvbi54aWFvcXV9LyR7b3B0aW9uLmFpbX1gLCAoZGF0YTogb2JqZWN0KSA9PiB7XG4gICAgICAgICAgJHBhZ2UuU2V0KHsgb3B0aW9uLCBjdHg6IHRoaXMgfSwgZGF0YSk7XG5cbiAgICAgICAgICAvLyDpnZ7liIbkuqvnlYzpnaLkuIvlsIbpobXpnaLmlbDmja7lhpnlhaXlrZjlgqhcbiAgICAgICAgICBpZiAoIW9wdGlvbi5zaGFyZSkge1xuICAgICAgICAgICAgJGZpbGUubWFrZURpcihgZnVuY3Rpb24vJHtvcHRpb24ueGlhb3F1fWApO1xuICAgICAgICAgICAgJGZpbGUud3JpdGVKc29uKGBmdW5jdGlvbi8ke29wdGlvbi54aWFvcXV9YCwgb3B0aW9uLmFpbSwgZGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAoKSA9PiB7XG4gICAgICAgICAgJHBhZ2UuU2V0KHsgb3B0aW9uLCBjdHg6IHRoaXMgfSwgW3sgdGFnOiAnZXJyb3InLCBzdGF0dXNCYXJIZWlnaHQ6IGEuaW5mby5zdGF0dXNCYXJIZWlnaHQgfV0pO1xuICAgICAgICB9LCAoKSA9PiB7XG4gICAgICAgICAgJHBhZ2UuU2V0KHsgb3B0aW9uLCBjdHg6IHRoaXMgfSwgW3sgdGFnOiAnZXJyb3InLCBzdGF0dXNCYXJIZWlnaHQ6IGEuaW5mby5zdGF0dXNCYXJIZWlnaHQgfV0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIG9uU2hvdygpIHtcbiAgICAvLyDorr7nva7og7blm4rlkozog4zmma/popzoibJcbiAgICBjb25zdCBbbmMsIGJjXSA9ICRwYWdlLmNvbG9yKHRoaXMuZGF0YS5wYWdlWzBdLmdyZXkpO1xuXG4gICAgd3guc2V0TmF2aWdhdGlvbkJhckNvbG9yKG5jKTtcbiAgICB3eC5zZXRCYWNrZ3JvdW5kQ29sb3IoYmMpO1xuICB9LFxuICAvKlxuICAgKiBPblJlYWR5KCkge1xuICAgKiAgIFRoaXMubWFya2VyID0gd3guZ2V0U3RvcmFnZVN5bmMoYCR7dGhpcy54aWFvcXV9LWFsbGApW3RoaXMuaWRdO1xuICAgKiB9LFxuICAgKi9cblxuICAvKlxuICAgKiBEZXRhaWwoKSB7XG4gICAqICAgbGV0IG1hcmtlcnMgPSB0aGlzLm1hcmtlcjtcbiAgICogICB3eC5vcGVuTG9jYXRpb24oe1xuICAgKiAgICAgbGF0aXR1ZGU6IG1hcmtlci5sYXRpdHVkZSxcbiAgICogICAgIGxvbmdpdHVkZTogbWFya2Vycy5sb25naXR1ZGUsXG4gICAqICAgICBuYW1lOiBtYXJrZXJzLnRpdGxlLFxuICAgKiAgIH0pO1xuICAgKiB9LFxuICAgKi9cbiAgb25QYWdlU2Nyb2xsKGU6IGFueSkge1xuICAgICRjb21wb25lbnQubmF2KGUsIHRoaXMpO1xuICB9LFxuICBjQShlOiBhbnkpIHtcbiAgICAkY29tcG9uZW50LnRyaWdnZXIoZSwgdGhpcyk7XG4gIH0sXG4gIG9uU2hhcmVBcHBNZXNzYWdlKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0aXRsZTogdGhpcy5kYXRhLnBhZ2VbMF0udGl0bGUsXG4gICAgICBwYXRoOiBgL2Z1bmN0aW9uL3NpdHVzP0Zyb2095Li76aG1JmRlcHRoPTEmc2hhcmU9dHJ1ZSZ4aWFvcXU9JHt0aGlzLnhpYW9xdX0maWQ9JHt0aGlzLmlkfSZhaW09JHt0aGlzLmFpbX1gXG4gICAgfTtcbiAgfSxcblxuICAvLyDopoblhpnph43lrprlkJHliLDkuLvpobVcbiAgcmVkaXJlY3QoKSB7XG4gICAgdGhpcy4kc3dpdGNoKCcvcGFnZS9tYWluJyk7XG4gIH1cbn0pO1xuIl19